AWSTemplateFormatVersion: "2010-09-09"
Description: Enable streaming Amazon Connect calls to Deepgram

Parameters:
  deepgramApiKey:
    Description: The Deepgram API key that will be used for transcription
    Type: String
  vpcId:
    Description: VPC where the ECS service will be deployed
    Type: AWS::EC2::VPC::Id
  subnets:
    Description: Subnets where the ECS service will be deployed
    Type: List<AWS::EC2::Subnet::Id>

Resources:
  kvsDgTrigger:
    Type: "AWS::Lambda::Function"
    Properties:
      Role: arn:aws:iam::764576996850:role/kvsDgTriggerRole
      Timeout: 30
      Environment:
        Variables:
          KVS_DG_INTEGRATOR_DOMAIN: !GetAtt kvsDgIntegratorLoadBalancer.DNSName
          LOAD_TEST_NUM_SESSIONS: "10"
          LOAD_TEST_INTERVAL_MS: "3000"
      PackageType: "Image"
      Code:
        ImageUri: 764576996850.dkr.ecr.us-east-1.amazonaws.com/kvs-dg-trigger:latest

  kvsDgIntegratorEcsCluster:
    Type: "AWS::ECS::Cluster"
    Properties:
      ClusterName: kvs-dg-integrator-cluster
      ClusterSettings:
        - Name: containerInsights
          Value: enabled # only use for load testing

  kvsDgIntegratorTaskDefinition:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      ContainerDefinitions:
        - Name: kvs-dg-integrator-container
          Image: 764576996850.dkr.ecr.us-east-1.amazonaws.com/kvs-dg-integrator:latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-stream-prefix: ecs
              awslogs-region: !Ref "AWS::Region"
              awslogs-group: kvs-dg-integrator
              awslogs-create-group: "true"
          Environment:
            - Name: DEEPGRAM_API_KEY
              Value: !Ref deepgramApiKey
            - Name: APP_REGION
              Value: !Ref "AWS::Region"
          PortMappings:
            - HostPort: 80
              ContainerPort: 80
              Protocol: tcp
              AppProtocol: http
      Cpu: "256"
      ExecutionRoleArn: "arn:aws:iam::764576996850:role/kvsDgIntegratorRole"
      TaskRoleArn: "arn:aws:iam::764576996850:role/kvsDgIntegratorRole"
      Family: kvs-dg-integrator-task-family
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        OperatingSystemFamily: LINUX

  kvsDgIntegratorSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for kvs-dg-integrator Fargate task
      VpcId: !Ref vpcId
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic
          IpProtocol: "-1"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  kvsDgIntegratorEcsService:
    Type: AWS::ECS::Service
    DependsOn: kvsDgIntegratorLoadBalancerListener
    Properties:
      Cluster: !Ref kvsDgIntegratorEcsCluster
      TaskDefinition: !Ref kvsDgIntegratorTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets: !Ref subnets
          SecurityGroups:
            - !Ref kvsDgIntegratorSecurityGroup
      LoadBalancers:
        - TargetGroupArn: !Ref kvsDgIntegratorLoadBalancerTargetGroup
          ContainerName: kvs-dg-integrator-container
          ContainerPort: 80

  kvsDgIntegratorLoadBalancer:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      Subnets: !Ref subnets
      SecurityGroups: [!Ref kvsDgIntegratorSecurityGroup]

  kvsDgIntegratorLoadBalancerTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      VpcId: !Ref vpcId
      Port: 80
      Protocol: "HTTP"
      TargetType: "ip"
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: "/health-check"
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2

  kvsDgIntegratorLoadBalancerListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref kvsDgIntegratorLoadBalancerTargetGroup
          Type: "forward"
      LoadBalancerArn: !Ref kvsDgIntegratorLoadBalancer
      Port: 80
      Protocol: "HTTP"
